#!/bin/sh

set -e

export HOME="{{ .HomePath }}"

RELAYER_KEYS_PATH="$HOME/.hermes/keys"

log_with_time() {
  time=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  echo "$time $1"
}

# The indicator to understand that relayer isn't initialized.
if [ ! -d "$RELAYER_KEYS_PATH" ]; then

  log_with_time "Importing the relayer mnemonics."
  echo "{{ .CoreumRelayerMnemonic }}" > "$HOME/coreum-mnemonic"
  hermes keys add --key-name {{ .CoreumChanID }} --chain {{ .CoreumChanID }} --hd-path "m/44'/{{ .CoreumRelayerCoinType }}'/0'/0/0" --mnemonic-file "$HOME/coreum-mnemonic"
  
  {{ range .Peers }}
  echo "{{ .RelayerMnemonic }}" > "$HOME/{{ .ChanID }}-mnemonic"
  hermes keys add --key-name {{ .ChanID }} --chain {{ .ChanID }} --mnemonic-file "$HOME/{{ .ChanID }}-mnemonic"
  log_with_time "Connecting the chains."
  hermes create channel --a-chain {{ $.CoreumChanID }} --b-chain {{ .ChanID }} --a-port transfer --b-port transfer --new-client-connection --yes
  {{ end }}
fi

log_with_time "Starting the relayer."
hermes start &

# Capture the process ID to kill it later if needed
PID=$!

INITIAL_VERSION=$(curl -s {{ .CoreumRPCURL }}/abci_info\? | jq '.result.response.version')

# If initial version is empty kill the process.
if [ -z "$INITIAL_VERSION" ]; then
  log_with_time "Failed to fetch the initial API version. Exiting."
  kill $PID
  exit 1
fi

while true; do
  sleep 3

  CURRENT_VERSION=$(curl -s {{ .CoreumRPCURL }}/abci_info\? | jq '.result.response.version')

  log_with_time "Running API version check. Current: $CURRENT_VERSION Initial: $INITIAL_VERSION"

  # If fetching of version fails, skip this iteration
  if [ -z "$CURRENT_VERSION" ]; then
    log_with_time "API version is not available. Skipping this check."
    continue
  fi

  if [ "$INITIAL_VERSION" != "$CURRENT_VERSION" ]; then
    kill $PID
    log_with_time "API version changed from $INITIAL_VERSION to $CURRENT_VERSION. Process killed."
    exit 1
  fi
done
